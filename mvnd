#!/bin/sh

# ----------------------------------------------------------------------------
# Maven on docker scripts
#
# Tools that need to be available:
# ------------------
#   docker - must be accessible from command line
#
# Optional ENV vars
# -----------------
#   LOCAL_RESPOSITORY - location of maven local repository
#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
#     e.g. to debug Maven itself, use
#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
# ----------------------------------------------------------------------------

# stop on errors
set -e
# poor man "stack trace"
SCRIPT=$0
err_report() {
    echo "Error on $SCRIPT line $1"
}
trap 'err_report $LINENO' ERR


# enable script debug when maven debug is enabled
[[ $@ == *'-X'* ]] && set -x
[[ $@ == *'--debug'* ]] && set -x


# Location - root of project
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"


# resolve local repository
if [ -z "$LOCAL_RESPOSITORY" ] ; then
  LOCAL_RESPOSITORY="$HOME/.m2"
else
  # make it fully qualified
  LOCAL_RESPOSITORY=$(cd "$LOCAL_RESPOSITORY" && pwd)
fi

# echo "Using m2 repo at $LOCAL_RESPOSITORY"

# add argument -nn / --no-network => --net=none

# default image to run, to change it, create a file called 'mvnd.properties' and override properties
BASE_IMAGE="ubuntu:17.10"
JAVA_DISTRIBUTION="openjdk"
JAVA_VERSION="8"
MAVEN_VERSION="3.5.2"


PROPERTIES_FILE="$DIR/mvnd.properties"
if [ -f $PROPERTIES_FILE ]; then
  eval $(cat $PROPERTIES_FILE)
fi


docker run -it \
    -v "${LOCAL_RESPOSITORY}:/home/maven/.m2" \
    -v "$DIR:/sources" \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -w /sources \
    -e "USER=${USER}" \
    -e "MAVEN_OPTS=${MAVEN_OPTS}" \
    mvnd/"${BASE_IMAGE//[^[:alnum:]]/_}-${JAVA_DISTRIBUTION}:${JAVA_VERSION}-${MAVEN_VERSION}" \
    mvn $@
